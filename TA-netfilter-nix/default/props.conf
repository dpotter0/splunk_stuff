[syslog]
#Grabs process name and id
#REPORT-syslog1 = syslog1-extractions
#Sets syslog:<subtype>
TRANSFORMS-set_syslog_subtypes = set_syslog_netfilter


[syslog:netfilter]
#REPORT-netfilter_flags = netfilter_flags
REPORT-netfilter_event_action = netfilter_event_action
REPORT-netfilter_mac = netfilter_mac
REPORT-netfilter_tcp_flag = netfilter_tcp_flag

EXTRACT-logins = ^(?:[^:\n]*:){2}\d+\s+(?P<dest>\w+)(?:[^ \n]* ){5}(?P<vendor_action>[^ ]+)\s+(?P<vendor_login_type>[a-z]+) for (?P<src_user>[^ ]+)\s+(\w+\s+)+(?P<src_ip>[^ ]+) port (?P<src_port>[^ ]+)\s+(?P<app>.+)
EXTRACT-opt = OPT \((?P<opt>\S+)\)

EVAL-bytes = coalesce(bytes_in+bytes-out,bytes_in,bytes_out)
EVAL-bytes_out = case(lower(direction)=="outbound",LEN, 'IN'=="br0" AND 'OUT'=="vlan2",LEN)
EVAL-bytes_in = case(lower(direction)=="inbound",LEN, 'IN'=="vlan2",LEN)
##may need to play with direction eval more
EVAL-direction = case(isnotnull(direction),lower(direction),isnull('IN'),"outbound",isnotnull('IN'),"inbound")
#EVAL-modem_mac = case('IN'="vlan2",MACSRC)
EVAL-process = if(isNull(process), "netfilter", process)
EVAL-protocol = "ip"
EVAL-vendor_product = coalesce(vendor_product,"Linux Netfilter")
#EVAL-wan_mac = case(MACDST!="ff:ff:ff:ff:ff:ff",MACDST)

FIELDALIAS-netfilter_dst = DST AS dest, DST AS dst, DST AS dest_ip
FIELDALIAS-netfilter_dest_mac = MACDST AS dest_mac
FIELDALIAS-netfilter_dest_port = DPT AS dest_port
FIELDALIAS-netfilter_dvc = host AS dvc, host AS dvc_host
FIELDALIAS-netfilter_in = IN AS in, IN AS src_interface
FIELDALIAS-netfilter_out = OUT AS out, OUT AS dest_interface
FIELDALIAS-netfilter_src = SRC AS src, SRC AS src_ip, SRC AS clientip
FIELDALIAS-netfilter_src_mac = MACSRC AS src_mac
FIELDALIAS-netfilter_src_port = SPT AS src_port
FIELDALIAS-netfilter_tos = TOS AS tos
FIELDALIAS-netfilter_ttl = TTL AS ttl

LOOKUP-icmp_codes = icmp_codes TYPE AS TYPE CODE AS CODE OUTPUT TYPE AS icmp_type, icmp_code AS icmp_code, CODE AS icmp_type_code, icmp_code_description AS icmp_code_description
LOOKUP-netfilter_action = netfilter_action event_action OUTPUT cim_action AS action
LOOKUP-netfilter_transport = netfilter_transport PROTO OUTPUTNEW transport
